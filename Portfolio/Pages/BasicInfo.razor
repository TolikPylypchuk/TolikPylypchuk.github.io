<section class="row justify-content-center">
    <div class="col-md-3 m-2 m-md-4">
        <div class="card h-100">
            <div class="card-body">
                <h5 class="card-title">Who I am</h5>
                <p class="card-text">
                    A developer from Lviv, Ukraine with
                    @this.YearsOfExperience&nbsp;@(this.YearsOfExperience == 1 ? "year" : "years") of total experience
                    and
                    @this.YearsOfCommercialExperience&nbsp;@(this.YearsOfCommercialExperience == 1 ? "year" : "years")
                    of commercial experience.
                </p>
            </div>
        </div>
    </div>

    <div class="col-md-3 m-2 m-md-4">
        <div class="card h-100">
            <div class="card-body">
                <h5 class="card-title">What I do</h5>
                <p class="card-text">
                    Mostly back-end web development, and a little front-end and desktop as well.
                </p>
            </div>
        </div>
    </div>

    <div class="col-md-3 m-2 m-md-4">
        <div class="card h-100">
            <div class="card-body">
                <h5 class="card-title">Why I do it</h5>
                <p class="card-text">
                    Just for the fun of it, obviously.
                </p>
            </div>
        </div>
    </div>
</section>

@code {
    private DateTime ExperienceStart { get; } = new DateTime(2012, 10, 1);
    private DateTime CommercialExperienceStart { get; } = new DateTime(2017, 8, 28);

    private int YearsOfExperience { get; set; }
    private int YearsOfCommercialExperience { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        this.YearsOfExperience = this.CalculateYearsFromDate(this.ExperienceStart);
        this.YearsOfCommercialExperience = this.CalculateYearsFromDate(this.CommercialExperienceStart);
    }

    private int CalculateYearsFromDate(DateTime date)
    {
        var today = DateTime.Today;

        int result = today.Year - date.Year;

        if (date.Date > today.AddYears(-result))
        {
            result--;
        }

        return result;
    }
}
