<aside class="d-flex flex-column mt-4">
    @if (this.IsLoaded)
    {
        <img src="img/me.jpg" width="250" height="250" alt="Me" />
    }

    <div class="align-self-center">
        <p><strong>@this.YearsOfTotalExperience</strong> years of total <br /> experience</p>
        <p><strong>@this.YearsOfCommercialExperience</strong> years of commercial <br /> experience</p>
    </div>

    <div class="row justify-content-center">
        @foreach (var link in this.AccountLinks)
        {
            <a href="@link.Url" title="@link.Name" target="_blank" class="col-2 text-center">
                <i class="fab fa-@link.Icon fa-2x" aria-hidden="true" aria-label="@link.Name"></i>
            </a>
        }
    </div>
</aside>

@code {
    private DateTime TotalExperienceStart { get; } = new(2012, 10, 1);
    private DateTime CommercialExperienceStart { get; } = new(2017, 8, 28);

    private int YearsOfTotalExperience { get; set; }
    private int YearsOfCommercialExperience { get; set; }

    private bool IsLoaded { get; set; }

    private List<AccountLink> AccountLinks { get; } = new()
    {
        new("GitHub", "github", "https://github.com/TolikPylypchuk"),
        new("LinkedIn", "linkedin", "https://www.linkedin.com/in/anatoliy-pylypchuk"),
        new("StackOverflow", "stack-overflow", "https://stackoverflow.com/users/5659368/tolik-pylypchuk?tab=profile")
    };

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        this.YearsOfTotalExperience = this.CalculateYearsFromDate(this.TotalExperienceStart);
        this.YearsOfCommercialExperience = this.CalculateYearsFromDate(this.CommercialExperienceStart);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            this.IsLoaded = true;
            this.StateHasChanged();
        }
    }

    private int CalculateYearsFromDate(DateTime date)
    {
        var today = DateTime.Today;

        int result = today.Year - date.Year;

        if (date.Date > today.AddYears(-result))
        {
            result--;
        }

        return result;
    }
}
